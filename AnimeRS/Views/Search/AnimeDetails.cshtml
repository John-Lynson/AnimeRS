@model AnimeRS.Core.ViewModels.AnimeDetailsViewModel

<div class="page-container">
    <div class="anime-details-container">
        <div class="anime-image">
            <img src="@Model.Anime.ImageURL" alt="@Model.Anime.Title" />
        </div>
        <div class="anime-info">
            <h2>@Model.Anime.Title</h2>
            <p><strong>Genre:</strong> @Model.Anime.Genre</p>
            <p><strong>Aantal Afleveringen:</strong> @Model.Anime.Episodes</p>
            <p><strong>Status:</strong> @Model.Anime.Status</p>
            <p><strong>Release Datum:</strong> @Model.Anime.ReleaseDate.ToString("dd-MM-yyyy")</p>
            <p><strong>Omschrijving:</strong> @Model.Anime.Description</p>
        </div>
    </div>

    <div class="anime-favorite">
        <span class="favorite-star" data-anime-id="@Model.Anime.Id" onclick="toggleFavorite(this.dataset.animeId)">
            @if (Model.FavoriteAnime)
            {
                <span class="star filled">&#9733;</span> <!-- Gevulde ster -->
            }
            else
            {
                <span class="star">&#9734;</span> <!-- Lege ster -->
            }
        </span>
    </div>

    </span>
    <span class="average-score">@Model.AverageScore.ToString("0.0")</span> <!-- Toon de gemiddelde score -->
    </div>

    <section class="reviews-section">
        <h3>Reviews</h3>
        @foreach (var review in Model.Reviews)
        {
            <div class="review">
                <div class="review-header">
                    <img src="@User.Claims.FirstOrDefault(c => c.Type == "picture")?.Value" alt="Profile Picture" class="profile-picture">
                    <div class="review-rating">
                        @for (int i = 0; i < review.Rating; i++)
                        {
                            <span class="star">&#9733;</span> <!-- Gevulde ster -->
                        }
                        @for (int i = review.Rating; i < 5; i++)
                        {
                            <span class="star">&#9734;</span> <!-- Lege ster -->
                        }
                    </div>
                </div>
                <p class="review-text" data-review-id="@review.Id">@review.Comment</p>
                <textarea class="edit-review-text" data-review-id="@review.Id" hidden>@review.Comment</textarea>


                @if (User.Identity.IsAuthenticated)
                {
                    <button class="edit-review-btn" data-review-id="@review.Id" onclick="editReview(@review.Id)">Bewerken</button>
                    <button class="delete-review-btn" onclick="deleteReview(@review.Id)">X</button>
                }
            </div>
        }

    <!-- Review formulier -->
    <form id="reviewForm">
        <input type="hidden" id="animeId" value="@Model.Anime.Id">
        <textarea id="reviewComment" placeholder="Uw review..."></textarea>
        <select id="reviewRating">
            <option value="1">1 Ster</option>
            <option value="2">2 Sterren</option>
            <option value="3">3 Sterren</option>
            <option value="4">4 Sterren</option>
            <option value="5">5 Sterren</option>
        </select>
        <button type="submit">Review Plaatsen</button>
    </form>
    </section>

    @section Scripts {
        <script src="~/js/Review.js"></script>
    }
